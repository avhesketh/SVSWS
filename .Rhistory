xlab("exp(-1/Time since experiment start (weeks))") +
ylab(expression("Mean number of"~ italic(B. ~glandula))) +
labs(colour = "Temperature") +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
balanus_time <- ggplot(aes(x = treatment, y = av_count, fill = treatment),
data = balanus_plot) +
geom_bar(position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.01) +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
View(balanus_plot)
balanus_time <- ggplot(aes(x = treatment, y = av_count, fill = treatment),
data = balanus_plot) +
geom_bar(position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.01, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
?geom_bar
balanus_time <- ggplot(aes(x = trty1, y = av_count, fill = trty1),
data = balanus_plot) +
geom_bar(position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.01, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
balanus_time <- ggplot(aes(x = trty1, y = av_count, fill = trty1),
data = balanus_plot) +
geom_bar(position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.01, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
?geom_bar
balanus_time <- ggplot(aes(x = trty1, y = av_count, fill = trty1),
data = balanus_plot) +
geom_bar(position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.01, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
balanus_time <- ggplot(aes(x = trty1, y = av_count, fill = trty1),
data = balanus_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.01, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
balanus_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15") %>%
select(-date) %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_count = mean(count), se_count = sd(count)/sqrt(length(count))) %>%
rename(Treatment = trty1)
balanus_time <- ggplot(aes(x = Treatment, y = av_count, fill = Treatment),
data = balanus_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.01, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
balanus_time <- ggplot(aes(x = Treatment, y = av_count, fill = Treatment),
data = balanus_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.5, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
balanus_time <- ggplot(aes(x = Treatment, y = av_count, fill = Treatment),
data = balanus_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.3, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
balanus_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15" & species == "balanus") %>%
select(-date) %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_count = mean(count), se_count = sd(count)/sqrt(length(count))) %>%
rename(Treatment = trty1)
balanus_time <- ggplot(aes(x = Treatment, y = av_count, fill = Treatment),
data = balanus_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.3, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_cover = mean(percent_cover),
se_cover = sd(percent_cover)/sqrt(length(percent_cover)))
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_cover = mean(percent_cover),
se_cover = sd(percent_cover)/sqrt(length(percent_cover))) %>%
rename(Treatment = trty1)
ulo_time <- ggplot(aes(x = Treatment, y = av_cover, fill = Treatment),
data = ulo_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_colour_manual(values = c("blue","red")) +
geom_errorbar(aes(ymax = av_cover + se_cover, ymin = av_cover - se_cover),
width = 0.7) +
xlab("Treatment") +
ylab(expression("Mean cover of"~ italic(Ulothrix ~sp.)~ "(%)")) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16)) +
geom_smooth(aes(y = pred, x = timediff), data = ulothrix)
ulo_time
ulo_time <- ggplot(aes(x = Treatment, y = av_cover, fill = Treatment),
data = ulo_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_colour_manual(values = c("blue","red")) +
geom_errorbar(aes(ymax = av_cover + se_cover, ymin = av_cover - se_cover),
width = 0.7) +
xlab("Treatment") +
ylab(expression("Mean cover of"~ italic(Ulothrix ~sp.)~ "(%)")) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
ulo_time
ulo_time <- ggplot(aes(x = Treatment, y = av_cover, fill = Treatment),
data = ulo_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue","red")) +
geom_errorbar(aes(ymax = av_cover + se_cover, ymin = av_cover - se_cover),
width = 0.7) +
xlab("Treatment") +
ylab(expression("Mean cover of"~ italic(Ulothrix ~sp.)~ "(%)")) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
ulo_time
View(ulo_plot)
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_cover = mean(percent_cover, na.rm = TRUE),
se_cover = sd(percent_cover)/sqrt(length(percent_cover))) %>%
rename(Treatment = trty1)
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_cover = mean(percent_cover, na.rm = TRUE),
se_cover = sd(percent_cover)/sqrt(n(percent_cover))) %>%
rename(Treatment = trty1)
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_cover = mean(percent_cover, na.rm = TRUE),
se_cover = sd(percent_cover)/sqrt(length(percent_cover))) %>%
rename(Treatment = trty1)
ulo_time <- ggplot(aes(x = Treatment, y = av_cover, fill = Treatment),
data = ulo_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue","red")) +
geom_errorbar(aes(ymax = av_cover + se_cover, ymin = av_cover - se_cover),
width = 0.7) +
xlab("Treatment") +
ylab(expression("Mean cover of"~ italic(Ulothrix ~sp.)~ "(%)")) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
ulo_time
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1)
summarize(av_cover = mean(count, na.rm = TRUE),
se_cover = sd(count)/sqrt(length(count))) %>%
rename(Treatment = trty1)
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2020-03-15" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_cover = mean(count, na.rm = TRUE),
se_cover = sd(count)/sqrt(length(count))) %>%
rename(Treatment = trty1)
ulo_time <- ggplot(aes(x = Treatment, y = av_cover, fill = Treatment),
data = ulo_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue","red")) +
geom_errorbar(aes(ymax = av_cover + se_cover, ymin = av_cover - se_cover),
width = 0.7) +
xlab("Treatment") +
ylab(expression("Mean cover of"~ italic(Ulothrix ~sp.)~ "(%)")) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
ulo_time
View(surveys_clean)
balanus_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2019-10-20" & species == "balanus") %>%
select(-date) %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_count = mean(count), se_count = sd(count)/sqrt(length(count))) %>%
rename(Treatment = trty1)
balanus_time <- ggplot(aes(x = Treatment, y = av_count, fill = Treatment),
data = balanus_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue", "red")) +
geom_errorbar(aes(ymax = av_count + se_count, ymin = av_count - se_count),
width = 0.3, position = "dodge") +
xlab("Treatment") +
ylab(expression("Mean abundance of"~ italic(B. ~glandula))) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
balanus_time
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2019-10-20" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_cover = mean(count, na.rm = TRUE),
se_cover = sd(count)/sqrt(length(count))) %>%
rename(Treatment = trty1)
ulo_time <- ggplot(aes(x = Treatment, y = av_cover, fill = Treatment),
data = ulo_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue","red")) +
geom_errorbar(aes(ymax = av_cover + se_cover, ymin = av_cover - se_cover),
width = 0.7) +
xlab("Treatment") +
ylab(expression("Mean cover of"~ italic(Ulothrix ~sp.)~ "(%)")) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
ulo_time
ulo_plot <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(date == "2019-10-20" & species == "ulothrix") %>%
mutate(trty1 = substring(treatment, 1, 1)) %>%
group_by(trty1) %>%
summarize(av_cover = mean(percent_cover, na.rm = TRUE),
se_cover = sd(percent_cover)/sqrt(length(percent_cover))) %>%
rename(Treatment = trty1)
ulo_time <- ggplot(aes(x = Treatment, y = av_cover, fill = Treatment),
data = ulo_plot) +
geom_bar(stat = "identity", position = "dodge") +
theme_classic() +
scale_fill_manual(values = c("blue","red")) +
geom_errorbar(aes(ymax = av_cover + se_cover, ymin = av_cover - se_cover),
width = 0.7) +
xlab("Treatment") +
ylab(expression("Mean cover of"~ italic(Ulothrix ~sp.)~ "(%)")) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(axis.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 16))
ulo_time
balanus_mar20 <- balanus_y1 %>%
filter(date == "2019-10-20")
M1_bal <- glmmTMB(count ~ trty1 + (1|block),
data = balanus_mar20,
dispformula = ~block,
family = nbinom1)
M1_bal_resdh <- simulateResiduals(M1_bal)
plot(M1_bal_resdh)
Anova(M1_bal)
ulo_y1 <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(species == "ulothrix" & date <= "2020-03-15") %>%
mutate(trty1 = substring(treatment, 1, 1),
trty2 = substring(treatment, 2, 2),
timesincestart = difftime(date, min(date), units = c("weeks")),
remove = ifelse(percent_cover == "NA", TRUE, FALSE))
ulo_y1 <- read_csv("./clean_data/SVSHW_survey_clean.csv") %>%
filter(species == "ulothrix" & date <= "2020-03-15") %>%
mutate(trty1 = substring(treatment, 1, 1),
trty2 = substring(treatment, 2, 2),
timesincestart = difftime(date, min(date), units = c("weeks")),
remove = ifelse(percent_cover == "NA", TRUE, FALSE)) %>%
filter(remove == FALSE) %>%
select(-remove)
ulo_y1_oct <- ulo_y1 %>%
filter(date == "2019-10-20")
M1_ulo <- glmmTMB(percent_cover ~ trty1 + (1|block),
data = ulo_y1_oct,
family = beta_family())
ulo_y1_oct <- ulo_y1 %>%
filter(date == "2019-10-20") %>%
mutate(percent_cover = percent_cover*(n(percent_cover -1)))
ulo_y1_oct <- ulo_y1 %>%
filter(date == "2019-10-20") %>%
mutate(percent_cover = (percent_cover*(length(percent_cover) -1) + 0.5)/length(percent_cover))
M1_ulo <- glmmTMB(percent_cover ~ trty1 + (1|block),
data = ulo_y1_oct,
family = beta_family())
ulo_y1_oct <- ulo_y1 %>%
filter(date == "2019-10-20") %>%
mutate(percent_cover = (percent_cover*(length(percent_cover) -1) + 0.5)/length(percent_cover))
View(ulo_y1_oct)
M1_ulo <- glmmTMB(percent_cover ~ trty1 + (1|block),
data = ulo_y1_oct,
family = beta_family())
M1_ulo <- glmmTMB(percent_cover ~ trty1 + (1|block),
data = ulo_y1_oct,
family = beta_family())
range(ulo_y1_oct$percent_cover)
glimpse(ulo_y1_oct)
ulo_y1_oct <- ulo_y1 %>%
filter(date == "2019-10-20") %>%
mutate(percent_cover = (percent_cover*(length(percent_cover) -1) + 0.5)/length(percent_cover)) %>%
nutate(percent_cover = as.numeric(percent_cover), trty1 = as.factor(trty1))
ulo_y1_oct <- ulo_y1 %>%
filter(date == "2019-10-20") %>%
mutate(percent_cover = (percent_cover*(length(percent_cover) -1) + 0.5)/length(percent_cover)) %>%
mutate(percent_cover = as.numeric(percent_cover), trty1 = as.factor(trty1))
M1_ulo <- glmmTMB(percent_cover ~ trty1 + (1|block),
data = ulo_y1_oct,
family = beta_family())
glimpse(ulo_y1_oct)
str(ulo_y1_oct)
hist(ulo_y1_oct$percent_cover)
M1_ulo <- glmmTMB(percent_cover/100 ~ trty1 + (1|block),
data = ulo_y1_oct,
family = beta_family())
plot(simulateResiduals(M1_ulo))
Anova(M1_ulo)
library(readr)
racerocks_temp <- read_csv("~/Downloads/racerocks_temp.csv")
View(racerocks_temp)
racerocks_summ <- racerocks_temp %>%
group_by(Day) %>%
summarize(max.temp = max(`Temp (°C)`))
mean(racerocks_summ$max.temp)
barn_summ$treatment <- as.factor(barn_summ$treatment, levels = c("AA","WA","AW","AA"))
barn_summ$treatment <- factor(barn_summ$treatment, levels = c("AA","WA","AW","AA"))
?factor
barn_summ
?as.factor
barn_summ$treatment <- as.factor(barn_summ$treatment, levels = c("AA","WA","AW","AA"))
X <- factor(barn_summ$treatment, levels = c("AA","WA","AW","AA"))
barn_summ$treatment <- factor(barn_summ$treatment, levels = c("AA","WA","AW","WW"))
bal_fig <- ggplot(aes(x = trt, y = mean_abund, fill = treatment), data = barn_summ) +
facet_grid(species ~ size) +
theme_bw() +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = mean_abund + se_abund, ymin = mean_abund - se_abund),
position = position_dodge(width = 0.9),
width = 0.5) +
ylab("Abundance") +
xlab("Temperature treatment") +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme(axis.title = element_text(size = 16)) +
theme(axis.text = element_text(size = 12)) +
theme(axis.text.x = element_blank()) +
theme(strip.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14)) +
theme(legend.text = element_text(size = 12)) +
scale_fill_manual(values = c("blue","purple","orange","red"))
bal_fig
bal_fig <- ggplot(aes(x = trt, y = mean_abund, fill = treatment), data = barn_summ) +
facet_grid(species ~ size) +
theme_bw() +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = mean_abund + se_abund, ymin = mean_abund - se_abund),
position = position_dodge(width = 0.9),
width = 0.5) +
ylab("Abundance") +
xlab("Temperature treatment") +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme(axis.title = element_text(size = 16)) +
theme(axis.text = element_text(size = 12)) +
theme(axis.text.x = element_blank()) +
theme(strip.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14)) +
theme(legend.text = element_text(size = 12)) +
scale_fill_manual(values = c("blue","orange","purple","red"))
bal_fig
barn_summ <- recruitment %>%
group_by(treatment, species, size) %>%
summarize(mean_abund = mean(count), se_abund = se(count))
bal_fig <- ggplot(aes(x = trt, y = mean_abund, fill = treatment), data = barn_summ) +
facet_grid(species ~ size) +
theme_bw() +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = mean_abund + se_abund, ymin = mean_abund - se_abund),
position = position_dodge(width = 0.9),
width = 0.5) +
ylab("Abundance") +
xlab("Temperature treatment") +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme(axis.title = element_text(size = 16)) +
theme(axis.text = element_text(size = 12)) +
theme(axis.text.x = element_blank()) +
theme(strip.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14)) +
theme(legend.text = element_text(size = 12)) +
scale_fill_manual(values = c("blue","orange","purple","red"))
bal_fig
bal_fig <- ggplot(aes(x = trt, y = mean_abund, fill = treatment), data = barn_summ) +
facet_grid(species ~ size) +
theme_bw() +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = mean_abund + se_abund, ymin = mean_abund - se_abund),
position = position_dodge(width = 0.9),
width = 0.5) +
ylab("Abundance") +
xlab("Temperature treatment") +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
theme(axis.title = element_text(size = 16)) +
theme(axis.text = element_text(size = 12)) +
theme(axis.text.x = element_blank()) +
theme(strip.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14)) +
theme(legend.text = element_text(size = 12)) +
scale_fill_manual(values = c("blue","purple","orange","red"))
bal_fig
boxplot(disp.y1s)
boxplot(disp.y2)
boxplot(disp.y2.2, xlab = "Treatment", col = c("blue", "purple","orange","red"))
tiff("fall2020_centroids.tiff", units = "in", width = 6, height = 4, res = 450)
boxplot(disp.y2.2, xlab = "Treatment", col = c("blue", "purple","orange","red"))
dev.off()
