values_fill = list(abund =0))
# extract factors for analyses
epifauna_factors.summer <- epifauna_summer %>%
select(block, number, treatment)
# convert wide-format data to abundance matrix
epifauna_matrix.summer <- epifauna_summer %>%
select(-block, -number, - treatment) %>%
as.matrix()
epi_summer <- dbrda(epifauna_matrix.summer ~ treatment, epifauna_factors.summer, dist = "bray")
# load packages
pkgs <- c("vegan", "tidyverse","glmmTMB","DHARMa",
"plotrix", "lubridate", "emmeans","car", "patchwork",
"pairwiseAdonis", "glmer", "performance")
lapply(pkgs, library, character.only = TRUE)
rm(pkgs)
epi_summer <- dbrda(epifauna_matrix.summer ~ treatment, epifauna_factors.summer, dist = "bray")
summary(epi_summer)
screeplot(epi_summer)
# extract coordinates of tiles
data.scores.summer <- as.data.frame(scores(epi_summer)$sites)
# associate these with experimental treatments
data.scores.summer$treatment <- epifauna_factors.summer$treatment
# calculate the average position of tiles in ordination space for plotting centroids
data.scores.summer <- data.scores.summer %>% group_by(treatment) %>%
mutate(mean.x = mean(dbRDA1), mean.y = mean(dbRDA2)) %>% ungroup()
veganCovEllipse<-function (cov, center = c(0, 0), scale = 1, npoints = 100)
{
theta <- (0:npoints) * 2 * pi/npoints
Circle <- cbind(cos(theta), sin(theta))
t(center + scale * t(Circle %*% chol(cov)))
}
df_ell_summer <- data.frame()
for(g in levels(as.factor(data.scores.summer$treatment))){
df_ell_summer <- rbind(df_ell_summer, cbind(as.data.frame(with(data.scores.summer[data.scores.summer$treatment==g,],
veganCovEllipse(cov.wt(cbind(dbRDA1,dbRDA2),
wt=rep(1/length(dbRDA1),
length(dbRDA1)))$cov,center=c(mean(dbRDA1),mean(dbRDA2)))))
,group=g))
}
df_ell_summer$treatment <- df_ell_summer$group
# ordination in ggplot2
Fig5c <- ggplot() +
geom_path(data=df_ell_summer, aes(x=dbRDA1,y=dbRDA2,colour=treatment)) +
geom_point(data=data.scores.summer, aes(x=dbRDA1,y=dbRDA2,colour=treatment),
size=3, alpha = 0.8) + # add the point markers
scale_color_manual(values = pal.trt.y2) +
labs(color = "Treatment", x = "dbRDA1", y = "dbRDA2") +
plot_theme +
theme(plot.tag = element_text(face = "bold"),
legend.position = "none")
Fig5c
# define palettes for plotting
pal.trt <- c("#014779", "#EE4B2B", "#014779", "#7985CB", "#9C0098", "#EE4B2B", "grey50")
pch.trt <- c(1,1,16,16,16,16,16)
lty.trt <- c("dotdash","dotdash","solid","solid","solid","solid","solid","solid")
# ordination in ggplot2
Fig5c <- ggplot() +
geom_path(data=df_ell_summer, aes(x=dbRDA1,y=dbRDA2,colour=treatment)) +
geom_point(data=data.scores.summer, aes(x=dbRDA1,y=dbRDA2,colour=treatment),
size=3, alpha = 0.8) + # add the point markers
scale_color_manual(values = pal.trt.y2) +
labs(color = "Treatment", x = "dbRDA1", y = "dbRDA2") +
plot_theme +
theme(plot.tag = element_text(face = "bold"),
legend.position = "none")
Fig5c
pal.trt.y2 <- c("#014779", "#7985CB", "#9C0098", "#EE4B2B")
# ordination in ggplot2
Fig5c <- ggplot() +
geom_path(data=df_ell_summer, aes(x=dbRDA1,y=dbRDA2,colour=treatment)) +
geom_point(data=data.scores.summer, aes(x=dbRDA1,y=dbRDA2,colour=treatment),
size=3, alpha = 0.8) + # add the point markers
scale_color_manual(values = pal.trt.y2) +
labs(color = "Treatment", x = "dbRDA1", y = "dbRDA2") +
plot_theme +
theme(plot.tag = element_text(face = "bold"),
legend.position = "none")
Fig5c
# PerMANOVA
# need to constrain permutations within experimental blocks.
# also increase number of permutations to make up for constrained permutation.
h <- how(blocks = epifauna_factors.summer$block, nperm = 9999) #constrain permutation
anova.cca(epi_summer, permutations = h, by = "term")
disp.epi.summer <- betadisper(dist.epi.summer, type = "centroid",  bias.adjust = T,
group = epifauna_factors.summer$treatment)
# Permdisp
dist.epi.summer <- vegdist(epifauna_matrix.summer, method = "bray")
disp.epi.summer <- betadisper(dist.epi.summer, type = "centroid",  bias.adjust = T,
group = epifauna_factors.summer$treatment)
anova(disp.epi.summer)
epifauna_winter <- epifauna_feb21 %>%
left_join(treatments_epifauna) %>%
left_join(codes) %>% select(-taxon, -taxon_repaired, -sp_code) %>%
group_by(block, number, treatment, unified_code) %>%
summarize(abund = sum(abund)) %>% ungroup() %>%
filter(is.na(unified_code) == F) %>%
pivot_wider(id_cols = c(block, number, treatment), names_from = unified_code, values_from = abund,
values_fill = list(abund =0))
epifauna_factors.winter <- epifauna_winter %>%
select(block, number, treatment) %>%
mutate(trty1 = substring(treatment, 1, 1),
trty2 = substring(treatment, 2,2))
epifauna_matrix.winter <- epifauna_winter %>%
select(-block, -number, - treatment) %>%
as.matrix()
epi_winter <- dbrda(epifauna_matrix.winter ~ treatment, epifauna_factors.winter, dist = "bray")
summary(epi_winter)
screeplot(epi_winter)
# extract coordinates of tiles
data.scores.winter <- as.data.frame(scores(epi_winter)$sites)
# associate these with experimental treatments
data.scores.winter$treatment <- epifauna_factors.winter$treatment
# calculate the average position of tiles in ordination space for plotting centroids
data.scores.winter <- data.scores.winter %>% group_by(treatment) %>%
mutate(mean.x = mean(dbRDA1), mean.y = mean(dbRDA2)) %>% ungroup()
veganCovEllipse<-function (cov, center = c(0, 0), scale = 1, npoints = 100)
{
theta <- (0:npoints) * 2 * pi/npoints
Circle <- cbind(cos(theta), sin(theta))
t(center + scale * t(Circle %*% chol(cov)))
}
df_ell.winter <- data.frame()
for(g in levels(as.factor(data.scores.winter$treatment))){
df_ell.winter <- rbind(df_ell.winter, cbind(as.data.frame(with(data.scores.winter[data.scores.winter$treatment==g,],
veganCovEllipse(cov.wt(cbind(dbRDA1,dbRDA2),
wt=rep(1/length(dbRDA1),
length(dbRDA1)))$cov,center=c(mean(dbRDA1),mean(dbRDA2)))))
,group=g))
}
df_ell.winter$treatment <- df_ell.winter$group
# ordination in ggplot2
Fig5d <- ggplot() +
geom_path(data=df_ell.winter, aes(x=dbRDA1,y=dbRDA2,colour=treatment)) +
geom_point(data=data.scores.winter, aes(x=dbRDA1,y=dbRDA2,colour=treatment),
size=3, alpha = 0.8) + # add the point markers
scale_color_manual(values = pal.trt.y2) +
scale_shape_manual(values = pch.trt.y2) +
labs(color = "Treatment", x = "dbRDA1", y = "dbRDA2") +
plot_theme  +
theme(plot.tag = element_text(face = "bold"),
legend.position = "none")
Fig5d
# PerMANOVA
# need to constrain permutations within experimental blocks.
# also increase number of permutations to make up for constrained permutation.
h <- how(blocks = epifauna_factors.winter$block, nperm = 9999) #constrain permutation
anova.cca(epi_winter, permutations = h, by = "term")
mod.meant1 <- glmmTMB(mean_dt ~ treatment +  cloud_total +  min_tide +
(1 | block/number), dispformula = ~treatment,
data = trt.y1)
# look at overall mean Â± SE for treatments and bedrock
overall_mean <-  daily_temps %>%
group_by(treatment, date, period, block, number) %>%
summarize(mdt = max(temp, na.rm = T)) %>% ungroup() %>%
mutate(treatment = as.factor(treatment)) %>%
group_by(treatment, period) %>%
summarize(mmdt = mean(mdt), se_mdt = std.error(mdt)) %>% ungroup()
# same modeling scheme, but for mean temperatures (Appendix 2)
trt.y1 <- mean_daily %>% filter(period == "Year 1") %>% mutate(treatment = factor(treatment))
mod.meant1 <- glmmTMB(mean_dt ~ treatment +  cloud_total +  min_tide +
(1 | block/number), dispformula = ~treatment,
data = trt.y1)
emm1$contrasts
emm1 <- emmeans(mod.meant1, specs = pairwise ~ treatment)
emm1$contrasts
trt.y2 <- mean_daily %>% filter(period == "Year 2") %>% mutate(treatment = factor(treatment),
julian_day = yday(date))
mod.meant2 <- glmmTMB(mean_dt ~ treatment +
(1|block/number), dispformula = ~treatment,
data = trt.y2)
emm2 <- emmeans(mod.meant2, specs = pairwise ~ treatment)
emm2$contrasts
# define colour palette for plotting
pal.trt.y2 <- c("#014779", "#7985CB","#9C0098", "#EE4B2B")
# load packages
pkgs <- c("tidyverse","glmmTMB","DHARMa", "plotrix", "lubridate", "emmeans","car")
lapply(pkgs, library, character.only = TRUE)
rm(pkgs)
grazers_keytimes <- grazers_y2 %>%
filter(date %in% c("2020-09-14", "2021-02-24")) %>%
mutate(date = if_else(date == "2020-09-14", "Post-summer", "Winter"),
grazer = factor(grazer, levels = c("Lottia spp.", "Littorina spp.")))
Fig3 <- ggplot(grazers_keytimes, aes(x = treatment, y = total_grazers, col = treatment)) +
geom_boxplot(size = 0.4, outlier.color = NA) +
geom_jitter(size = 0.7) +
labs(x = "Treatment", y = "Total abundance", col = "Treatment") +
facet_grid(cols = vars(date), rows = vars(grazer), scales = "free_y") +
scale_color_manual(values = pal.trt.y2) +
theme_classic() +
theme(strip.text.y = element_text(face = "italic"))
png("./figures/Fig3.png", res = 700, width = 7, height = 5, units = "in")
Fig3
dev.off()
FigA10
# mean Shannon diversity of algae post-summer and wintertime in year 1 and year 2
FigA10 <- ggplot(diversity_plots, aes(x = timept, y = mean.asd, col = treatment, pch = treatment)) +
geom_point(position = position_dodge(width = 1)) +
geom_errorbar(aes(ymax = mean.asd + se.asd, ymin = mean.asd - se.asd),
position = position_dodge(width = 1), width = 0.5) +
facet_wrap(~period, scales ="free_x") +
theme_classic() +
scale_color_manual(values = pal.trt) +
scale_shape_manual(values = pch.trt) +
labs(x = "Time", pch = "Treatment", col = "Treatment", y = "Algal Shannon diversity")
FigA10
# try combining with algal cover figure to see how this looks
library(patchwork)
Fig4.1 <- Fig4/FigA10 + plot_layout(guides = "collect") + plot_annotation(tag_levels = "a",
tag_prefix = "(",
tag_suffix = ")")
Fig4 <- ggplot(aes(x = timept, y = algal_cover, col = treatment, pch = treatment),
data = algae_keytimes) +
geom_boxplot(outlier.color = NA) +
geom_point(position = position_jitterdodge(), size = 0.8)+
facet_wrap(~period, scales ="free_x") +
theme_classic() +
scale_color_manual(values = pal.trt.y2) +
scale_shape_manual(values = pch.trt.y2) +
labs(x = "Time", pch = "Treatment", col = "Treatment", y = "Algal cover (%)") +
theme(legend.position = "none",plot.tag = element_text(face = "bold"))
Fig4.1 <- Fig4/FigA10 + plot_layout(guides = "collect") + plot_annotation(tag_levels = "a",
tag_prefix = "(",
tag_suffix = ")")
Fig4.1
pal.trt <- c("#014779", "#EE4B2B", "#014779","#7985CB", "#9C0098", "#EE4B2B")
pch.trt <- c(1,1,16,16,16,16)
line.trt <- c("dotdash","dotdash","solid","solid","solid","solid")
FigA8 <- ggplot(aes(x = date, y = mean_cover, col = treatment, pch = treatment, lty=treatment), data = algae_summ) +
plot_theme +
geom_point() +
geom_line(lwd = 0.8 ,aes(group = treatment)) +
geom_errorbar(aes(ymax = mean_cover + se_cover, ymin = mean_cover - se_cover, lty = NULL)) +
labs(x = "Date", y ="Algal cover (%)", col = "Treatment",
lty = "Treatment", pch = "Treatment") +
scale_color_manual(values = pal.trt)+
scale_linetype_manual(values = line.trt) +
scale_shape_manual(values = pch.trt) +
theme(legend.key.width = unit(1, "cm"),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10)) +
geom_vline(aes(xintercept = ymd("2020-04-07")), linetype = "dotted", col = "grey30", lwd = 0.8)
# mean Shannon diversity of algae post-summer and wintertime in year 1 and year 2
FigA10 <- ggplot(diversity_plots, aes(x = timept, y = mean.asd, col = treatment, pch = treatment)) +
geom_point(position = position_dodge(width = 1)) +
geom_errorbar(aes(ymax = mean.asd + se.asd, ymin = mean.asd - se.asd),
position = position_dodge(width = 1), width = 0.5) +
facet_wrap(~period, scales ="free_x") +
theme_classic() +
scale_color_manual(values = pal.trt) +
scale_shape_manual(values = pch.trt) +
labs(x = "Time", pch = "Treatment", col = "Treatment", y = "Algal Shannon diversity") +
theme(plot.tag = element_text(face = "bold"))
Fig4.1 <- Fig4/FigA10 + plot_layout(guides = "collect") + plot_annotation(tag_levels = "a",
tag_prefix = "(",
tag_suffix = ")")
Fig4.1
## Algal Shannon diversity (Appendix 1 content)
pal.trt
Fig4 <- ggplot(aes(x = timept, y = algal_cover, col = treatment, pch = treatment),
data = algae_keytimes) +
geom_boxplot(outlier.color = NA) +
geom_point(position = position_jitterdodge(), size = 0.8)+
facet_wrap(~period, scales ="free_x") +
theme_classic() +
scale_color_manual(values = pal.trt.y2) +
scale_shape_manual(values = pch.trt.y2) +
labs(x = "Time", pch = "Treatment", col = "Treatment", y = "Algal cover (%)") +
theme(legend.position = "none",plot.tag = element_text(face = "bold"))
Fig4.1 <- Fig4/FigA10 + plot_layout(guides = "collect") + plot_annotation(tag_levels = "a",
tag_prefix = "(",
tag_suffix = ")")
Fig4.1
FigA10
Fig4
Fig4 <- ggplot(aes(x = timept, y = algal_cover, col = treatment, pch = treatment),
data = algae_keytimes) +
geom_boxplot(outlier.color = NA) +
geom_point(position = position_jitterdodge(), size = 0.8)+
facet_wrap(~period, scales ="free_x") +
theme_classic() +
scale_color_manual(values = pal.trt) +
scale_shape_manual(values = pch.trt.y2) +
labs(x = "Time", pch = "Treatment", col = "Treatment", y = "Algal cover (%)") +
theme(legend.position = "none",plot.tag = element_text(face = "bold"))
Fig4 <- ggplot(aes(x = timept, y = algal_cover, col = treatment, pch = treatment),
data = algae_keytimes) +
geom_boxplot(outlier.color = NA) +
geom_point(position = position_jitterdodge(), size = 0.8)+
facet_wrap(~period, scales ="free_x") +
theme_classic() +
scale_color_manual(values = pal.trt) +
scale_shape_manual(values = pch.trt) +
labs(x = "Time", pch = "Treatment", col = "Treatment", y = "Algal cover (%)") +
theme(legend.position = "none",plot.tag = element_text(face = "bold"))
Fig4
Fig4.1 <- Fig4/FigA10 + plot_layout(guides = "collect") + plot_annotation(tag_levels = "a",
tag_prefix = "(",
tag_suffix = ")")
Fig4.1
png("./figures/Fig4.1.png", res = 700, width = 6, height = 5,
units = "in")
Fig4.1
dev.off()
png("./figures/Fig4.1.png", res = 700, width = 6, height = 7,
units = "in")
Fig4.1
dev.off()
png("./figures/Fig4.1.png", res = 700, width = 5, height = 6,
units = "in")
Fig4.1
dev.off()
png("./figures/Fig4.1.png", res = 700, width = 5.5, height = 6,
units = "in")
Fig4.1
dev.off()
png("./figures/Fig4.png", res = 700, width = 6, height = 5, units = "in")
Fig4
dev.off()
Fig4 <- ggplot(aes(x = timept, y = algal_cover, col = treatment, pch = treatment),
data = algae_keytimes) +
geom_boxplot(outlier.color = NA) +
geom_point(position = position_jitterdodge(), size = 0.8)+
facet_wrap(~period, scales ="free_x") +
theme_classic() +
scale_color_manual(values = pal.trt) +
scale_shape_manual(values = pch.trt) +
labs(x = "Time", pch = "Treatment", col = "Treatment", y = "Algal cover (%)")
png("./figures/Fig4.png", res = 700, width = 6, height = 5, units = "in")
Fig4
dev.off()
png("./figures/Fig4.png", res = 700, width = 6, height = 4, units = "in")
Fig4
dev.off()
View(Fig4.1)
install.packages("metaDigitise")
library(metaDigitise)
metaDigitise("./fig_lt50.png")
metaDigitise("./")
Fig4.1
diversity_keytimes
diversity
View(diversity_keytimes)
# join survey data and metadata
diversity <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
left_join(visits_info) %>%
mutate(timesincestart = difftime(date, ymd("2019-04-12"), units = c("weeks")),
count = as.integer(count)) %>%
group_by(survey_no) %>%
mutate(timesincestart = max(timesincestart),
date = max(date)) %>%
mutate(abund = if_else(is.na(count), percent_cover, as.numeric(count))) %>%
select(species, abund, survey_no, tile_id, original_herb_trt) %>%
unique() %>%
pivot_wider(names_from = species, values_from = abund,values_fill = 0)
View(diversity)
View(algae)
View(algae_y1)
# read in algal cover data
algae <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
filter(species %in% c("Ulothrix_sp", "Ulva_sp", "Savoiea_robusta", "Pyropia_sp",
"Leathesia_marina", "Fucus_distichus","Endocladia_muricata",
"Petalonia_fascia", "Scunge","Mastocarpus_sp_crust")) %>%
left_join(survey_numbers) %>% select(-count) %>%
pivot_wider(names_from = species, values_from = percent_cover)
# read in algal cover data
algae <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
filter(species %in% c("Ulothrix_sp", "Ulva_sp", "Savoiea_robusta", "Pyropia_sp",
"Leathesia_marina", "Fucus_distichus","Endocladia_muricata",
"Petalonia_fascia", "Scunge","Mastocarpus_sp_crust")) %>%
left_join(survey_numbers) %>% select(-count) %>%
pivot_wider(names_from = species, values_from = percent_cover) %>%
filter(date = "2020-03-15")
# read in algal cover data
algae <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
filter(species %in% c("Ulothrix_sp", "Ulva_sp", "Savoiea_robusta", "Pyropia_sp",
"Leathesia_marina", "Fucus_distichus","Endocladia_muricata",
"Petalonia_fascia", "Scunge","Mastocarpus_sp_crust")) %>%
left_join(survey_numbers) %>% select(-count) %>%
pivot_wider(names_from = species, values_from = percent_cover) %>%
filter(date == "2020-03-15")
# read in algal cover data
algae <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
filter(species %in% c("Ulothrix_sp", "Ulva_sp", "Savoiea_robusta", "Pyropia_sp",
"Leathesia_marina", "Fucus_distichus","Endocladia_muricata",
"Petalonia_fascia", "Scunge","Mastocarpus_sp_crust")) %>%
left_join(survey_numbers) %>% select(-count) %>%
pivot_wider(names_from = species, values_from = percent_cover) %>%
filter(date == "2019-09-14")
# read in algal cover data
algae <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
filter(species %in% c("Ulothrix_sp", "Ulva_sp", "Savoiea_robusta", "Pyropia_sp",
"Leathesia_marina", "Fucus_distichus","Endocladia_muricata",
"Petalonia_fascia", "Scunge","Mastocarpus_sp_crust")) %>%
left_join(survey_numbers) %>% select(-count) %>%
pivot_wider(names_from = species, values_from = percent_cover) %>%
filter(date == "2019-10-25")
# read in algal cover data
algae <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
filter(species %in% c("Ulothrix_sp", "Ulva_sp", "Savoiea_robusta", "Pyropia_sp",
"Leathesia_marina", "Fucus_distichus","Endocladia_muricata",
"Petalonia_fascia", "Scunge","Mastocarpus_sp_crust")) %>%
left_join(survey_numbers) %>% select(-count) %>%
pivot_wider(names_from = species, values_from = percent_cover) %>%
filter(date == "2019-10-24")
# read in algal cover data
algae <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
filter(species %in% c("Ulothrix_sp", "Ulva_sp", "Savoiea_robusta", "Pyropia_sp",
"Leathesia_marina", "Fucus_distichus","Endocladia_muricata",
"Petalonia_fascia", "Scunge","Mastocarpus_sp_crust")) %>%
left_join(survey_numbers) %>% select(-count) %>%
pivot_wider(names_from = species, values_from = percent_cover) %>%
filter(date == "2019-10-20")
anova.cca(epi_summer, permutations = h, by = "term")
# load packages
pkgs <- c("vegan", "tidyverse","glmmTMB","DHARMa",
"plotrix", "lubridate", "emmeans","car", "patchwork",
"pairwiseAdonis", "glmer", "performance")
lapply(pkgs, library, character.only = TRUE)
# join survey data and metadata
diversity <- read_csv("./clean_data/SVSWS_survey_clean.csv") %>%
left_join(visits_info) %>%
mutate(timesincestart = difftime(date, ymd("2019-04-12"), units = c("weeks")),
count = as.integer(count)) %>%
group_by(survey_no) %>%
mutate(timesincestart = max(timesincestart),
date = max(date)) %>%
mutate(abund = if_else(is.na(count), percent_cover, as.numeric(count))) %>%
select(species, abund, survey_no, tile_id, original_herb_trt) %>%
unique() %>%
pivot_wider(names_from = species, values_from = abund,values_fill = 0)
# calculate species richness and Shannon diversity
diversity.factors <- diversity %>%
select(survey_no, tile_id, original_herb_trt)
# note that, because Shannon diversity from count & cover data cannot be combined
# invertebrate and algal diversity metrics must be calculated separately
diversity.invert.abund <- diversity %>%
ungroup() %>%
select(any_of(invert_list$species))
diversity.algae.abund <- diversity %>%
ungroup() %>%
select(any_of(alga_list$species))
richness <- specnumber(diversity %>% ungroup() %>% select(-survey_no, -tile_id, -original_herb_trt))
shannon.algae <- diversity(diversity.algae.abund)
shannon.invert <- diversity(diversity.invert.abund)
set.seed(26)
# load community data
epifauna_sept20 <- read_csv("./raw_data/epifauna/SVSWS_20200914_epifauna.csv")
epifauna_feb21 <- read_csv("./raw_data/epifauna/SVSWS_20210224_epifauna.csv")
# read in relevant metadata
block_design <- read_csv("./raw_data/design/SVSWS_tilesetup.csv")
codes <- read_csv("./raw_data/epifauna/taxonomic_codes.csv")
# all tiles were collected late in the experiment, so block & number of tiles corresponds
# to new block and new number
treatments_epifauna <- block_design %>% select(new_block, new_no, treatment) %>%
rename(block = new_block, number = new_no)
# since we ended up lumping some of the taxa, ensure all like taxa (e.g. amphipod adults & larvae)
# are united when summing abundance
epifauna_summer <- epifauna_sept20 %>%
left_join(treatments_epifauna) %>%
left_join(codes) %>% select(-taxon, -taxon_repaired, -sp_code) %>%
group_by(block, number, treatment, unified_code) %>%
summarize(abund = sum(abund)) %>% ungroup() %>%
# pivot for dbRDA (wide format required)
pivot_wider(id_cols = c(block, number, treatment), names_from = unified_code, values_from = abund,
values_fill = list(abund =0))
# extract factors for analyses
epifauna_factors.summer <- epifauna_summer %>%
select(block, number, treatment)
# convert wide-format data to abundance matrix
epifauna_matrix.summer <- epifauna_summer %>%
select(-block, -number, - treatment) %>%
as.matrix()
# PerMANOVA
# need to constrain permutations within experimental blocks.
# also increase number of permutations to make up for constrained permutation.
h <- how(blocks = epifauna_factors.summer$block, nperm = 9999) #constrain permutation
anova.cca(epi_summer, permutations = h, by = "term")
install.packages("BiodiversityR")
library(BiodiversityR)
library(BiodiversityR)
multiconstrained(method = "dbrda", epi_summer, permutations = h, by = "term")
multiconstrained(method = "dbrda", epifauna_matrix.summer ~ treatment, data = epifauna_factors.summer,
distance = "bray")
anova.cca(epi_summer, permutations = h, by = "term")
epifauna_winter <- epifauna_feb21 %>%
left_join(treatments_epifauna) %>%
left_join(codes) %>% select(-taxon, -taxon_repaired, -sp_code) %>%
group_by(block, number, treatment, unified_code) %>%
summarize(abund = sum(abund)) %>% ungroup() %>%
filter(is.na(unified_code) == F) %>%
pivot_wider(id_cols = c(block, number, treatment), names_from = unified_code, values_from = abund,
values_fill = list(abund =0))
epifauna_factors.winter <- epifauna_winter %>%
select(block, number, treatment) %>%
mutate(trty1 = substring(treatment, 1, 1),
trty2 = substring(treatment, 2,2))
epifauna_matrix.winter <- epifauna_winter %>%
select(-block, -number, - treatment) %>%
as.matrix()
multiconstrained(method = "dbrda", epifauna_matrix.winter ~ treatment, data = epifauna_factors.winter,
distance = "bray")
packageDescription("BiodiversityR")
citation("BiodiversityR")
citation("vegan")
packageDescription("DHARMa")
citation("emmeans")
install.packages("ggsn")
devtools::install_github('oswaldosantos/ggsn')
install.packages("ggmap")
View(above_tide)
